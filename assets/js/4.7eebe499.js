(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{210:function(t,s,a){t.exports=a.p+"assets/img/tcp_ip_stack.13913b2b.png"},211:function(t,s,a){t.exports=a.p+"assets/img/ethernet_frame.f4de10c4.png"},212:function(t,s,a){t.exports=a.p+"assets/img/netif_list.73bfcf79.png"},213:function(t,s,a){t.exports=a.p+"assets/img/setup_lwip.c67664dc.png"},220:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"𝙇𝙬𝙄𝙋-基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#𝙇𝙬𝙄𝙋-基础","aria-hidden":"true"}},[t._v("#")]),t._v(" 𝙇𝙬𝙄𝙋 基础")]),t._v(" "),n("p",[n("img",{attrs:{src:a(210),alt:"TCP/IP协议栈"}})]),t._v(" "),n("h2",{attrs:{id:"标准以太网数据帧格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标准以太网数据帧格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准以太网数据帧格式")]),t._v(" "),n("p",[n("img",{attrs:{src:a(211),alt:"Ethernet_Frame"}})]),t._v(" "),n("h2",{attrs:{id:"lwip-的网络接口管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip-的网络接口管理","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP 的网络接口管理")]),t._v(" "),n("p",[t._v("LwIP 使用 "),n("strong",[t._v("netif")]),t._v(" 结构体来描述硬件网络接口，并通过 "),n("code",[t._v("netif_add")]),t._v(" 函数将其挂载到全局 "),n("strong",[t._v("netif 链表")]),t._v("中。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(212),alt:"网卡链表"}})]),t._v(" "),n("h3",{attrs:{id:"netif-结构体"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#netif-结构体","aria-hidden":"true"}},[t._v("#")]),t._v(" netif 结构体")]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* struct netif 用于描述不同类型的网卡，在网卡初始化方法中，用户需要指定如下成员：\n** hwaddr_len, hwaddr[], mtu, flags\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 如果支持多网卡，则使用单向链表来管理同一设备的多个网卡 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" !LWIP_SINGLE_NETIF")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 网络字节序表示的 IPv4 地址，子网掩码，默认网关 */")]),t._v("\n    ip_addr_t ip_addr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ip_addr_t netmask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ip_addr_t gw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 数组保存多个 IPv6 地址 */")]),t._v("\n    ip_addr_t ip6_addr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LWIP_IPV6_NUM_ADDRESSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 每个 IPv6 地址的状态：临时的还是首选的 */")]),t._v("\n    u8_t ip6_addr_state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LWIP_IPV6_NUM_ADDRESSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6_ADDRESS_LIFETIMES")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 每个 IPv6 地址的剩余有效时间以及总共有效时间，单位：秒 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IP6_ADDR_LIFE_STATIC 表示这个地址是静态分配的 */")]),t._v("\n    u32_t ip6_addr_valid_life"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LWIP_IPV6_NUM_ADDRESSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    u32_t ip6_addr_pref_life"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LWIP_IPV6_NUM_ADDRESSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6_ADDRESS_LIFETIMES */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 此函数由以太网设备驱动程序调用，将数据包传递给 TCP/IP 协议栈 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 对于以太网设备，通常是 ethernet_input() */")]),t._v("\n    netif_input_fn input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 此函数由 IPv4 模块调用，该函数会解析得到硬件地址，然后发送数据包 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 对于以太网设备，通常是 etharp_output() */")]),t._v("\n    netif_output_fn output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 此函数由 ARP 模块调用，用于实现在数据链路层发送数据 */")]),t._v("\n    netif_linkoutput_fn linkoutput"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 此函数由 IPv6 模块调用，该函数会解析得到硬件地址，然后发送数据包 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 对于以太网设备，通常是 ethip6_output() */")]),t._v("\n    netif_output_ip6_fn output_ip6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_STATUS_CALLBACK")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 当网卡状态设置为 up 或者 down 时，此函数会被调用 */")]),t._v("\n    netif_status_callback_fn status_callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_STATUS_CALLBACK */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_LINK_CALLBACK")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 当网卡的数据链路设置为 up 或者 down 时，此函数会被调用 */")]),t._v("\n    netif_status_callback_fn link_callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_LINK_CALLBACK */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_REMOVE_CALLBACK")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 当网卡被移除时，此函数会被调用 */")]),t._v("\n    netif_status_callback_fn remove_callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_REMOVE_CALLBACK */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 用于将网卡的私有数据传递给上层 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" netif_get_client_data")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("client_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LWIP_NETIF_CLIENT_DATA_INDEX_MAX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LWIP_NUM_NETIF_CLIENT_DATA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_HOSTNAME")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 网卡的主机名，设置为 NULL 也合法 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("hostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_HOSTNAME */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_CHECKSUM_CTRL_PER_NETIF")]),t._v("\n    u16_t chksum_flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_CHECKSUM_CTRL_PER_NETIF*/")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 最大传输单元（以字节为单位），对于以太网，一般设为 1500 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IP 层会根据该字段来决定是否需要对数据包进行分片处理 */")]),t._v("\n    u16_t mtu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 最大传输单元（以字节为单位），由 RA 来更新 */")]),t._v("\n    u16_t mtu6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 数据链路层的硬件地址 */")]),t._v("\n    u8_t hwaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NETIF_MAX_HWADDR_LEN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 硬件地址长度，以太网是 6 字节 */")]),t._v("\n    u8_t hwaddr_len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 网卡状态信息标志位，包括网卡功能使能、广播使能、ARP 使能等 */")]),t._v("\n    u8_t flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 网卡的名字，蓝牙设备的网卡名字可以使 bt，WLAN 设备的名字可以是 wl */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 如果网卡具有相同的名字，需要通过 num 字段来进一步区分 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 网卡的标号，可用来标志同种类型的不同网卡 */")]),t._v("\n    u8_t num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6_AUTOCONFIG")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 是否使能 IPv6 自动配置 */")]),t._v("\n    u8_t ip6_autoconfig_enabled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6_AUTOCONFIG */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6_SEND_ROUTER_SOLICIT")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 剩余待发送的路由请求消息的数量 */")]),t._v("\n    u8_t rs_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6_SEND_ROUTER_SOLICIT */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" MIB2_STATS")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 链路类型 */")]),t._v("\n    u8_t link_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 预估的链路层速率 */")]),t._v("\n    u32_t link_speed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 最近一次链路层状态变化的时间（建立或者断开链接）*/")]),t._v("\n    u32_t ts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 计数器 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("stats_mib2_netif_ctrs")]),t._v(" mib2_counters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* MIB2_STATS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4 && LWIP_IGMP")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 可以调用此函数来向以太网 MAC 的组播过滤表中添加或删除条目 */")]),t._v("\n    netif_igmp_mac_filter_fn igmp_mac_filter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 && LWIP_IGMP */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6 && LWIP_IPV6_MLD")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 可以调用此函数来向以太网 MAC 的 IPv6 组播过滤表中添加或删除条目 */")]),t._v("\n    netif_mld_mac_filter_fn mld_mac_filter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 && LWIP_IPV6_MLD */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_USE_HINTS")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif_hint")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("hints"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_USE_HINTS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" ENABLE_LOOPBACK")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 待发送给自己的数据包列表 */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pbuf")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("loop_first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pbuf")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("loop_last"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_LOOPBACK_MAX_PBUFS")]),t._v("\n    u16_t loop_cnt_current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_LOOPBACK_MAX_PBUFS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ENABLE_LOOPBACK */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br"),n("span",{staticClass:"line-number"},[t._v("98")]),n("br"),n("span",{staticClass:"line-number"},[t._v("99")]),n("br"),n("span",{staticClass:"line-number"},[t._v("100")]),n("br"),n("span",{staticClass:"line-number"},[t._v("101")]),n("br"),n("span",{staticClass:"line-number"},[t._v("102")]),n("br"),n("span",{staticClass:"line-number"},[t._v("103")]),n("br"),n("span",{staticClass:"line-number"},[t._v("104")]),n("br"),n("span",{staticClass:"line-number"},[t._v("105")]),n("br"),n("span",{staticClass:"line-number"},[t._v("106")]),n("br"),n("span",{staticClass:"line-number"},[t._v("107")]),n("br"),n("span",{staticClass:"line-number"},[t._v("108")]),n("br"),n("span",{staticClass:"line-number"},[t._v("109")]),n("br"),n("span",{staticClass:"line-number"},[t._v("110")]),n("br"),n("span",{staticClass:"line-number"},[t._v("111")]),n("br"),n("span",{staticClass:"line-number"},[t._v("112")]),n("br"),n("span",{staticClass:"line-number"},[t._v("113")]),n("br"),n("span",{staticClass:"line-number"},[t._v("114")]),n("br"),n("span",{staticClass:"line-number"},[t._v("115")]),n("br"),n("span",{staticClass:"line-number"},[t._v("116")]),n("br"),n("span",{staticClass:"line-number"},[t._v("117")]),n("br"),n("span",{staticClass:"line-number"},[t._v("118")]),n("br"),n("span",{staticClass:"line-number"},[t._v("119")]),n("br"),n("span",{staticClass:"line-number"},[t._v("120")]),n("br"),n("span",{staticClass:"line-number"},[t._v("121")]),n("br"),n("span",{staticClass:"line-number"},[t._v("122")]),n("br"),n("span",{staticClass:"line-number"},[t._v("123")]),n("br")])]),n("h3",{attrs:{id:"netif-add-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#netif-add-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" netif_add 函数")]),t._v(" "),n("p",[t._v("在调用 "),n("code",[t._v("netif_add")]),t._v(" 函数之前需要初始化主机的 IP 地址，子网掩码，网关等信息：")]),t._v(" "),n("p",[n("code",[t._v("IP4_ADDR(&ipaddr,192,168,1,100)")])]),t._v(" "),n("p",[n("code",[t._v("ip_addr_set_zero_ip4(&ipaddr)")])]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @brief 向 LwIP 中添加新的网卡\n *\n * @param netif：netif 结构体（调用函数之前需要为该结构体分配好内存）\n * @param ipaddr：该网卡的 IP 地址\n * @param netmask：该网卡的子网掩码\n * @param gw：该网卡的默认网关\n * @param state： 该网卡的私有数据（LwIP 无法得知该数据的具体含义）\n * @param init：初始化该网卡时的回调函数\n * @param input： 将数据包传递给 LwIP 上层协议的回调函数。如果没有操作系统，建议使用 netif_input，它会将数据包直接传给协议栈；如果有操作系统，建议使用 tcpip_input，它会向 TCPIP 线程发送一个通知。这两个函数会根据网卡的 NETIF_FLAG_ETHARP 和 NETIF_FLAG_ETHERNET 标志来决定将数据包转发给 ethernet_input 函数还是 ip_input 函数。\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("netif_add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ip4_addr_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ipaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ip4_addr_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("netmask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ip4_addr_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netif_init_fn init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netif_input_fn input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6")]),t._v("\n  s8_t i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ASSERT_CORE_LOCKED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SINGLE_NETIF")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif_default "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ASSERT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single netif already set"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ERROR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"netif_add: invalid netif"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netif "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ERROR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"netif_add: No init function given"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" init "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ipaddr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ipaddr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_2_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IP4_ADDR_ANY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netmask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    netmask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_2_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IP4_ADDR_ANY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gw "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gw "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_2_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IP4_ADDR_ANY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 清空网卡之前的 IP 地址，子网掩码，默认网关等字段的信息 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_addr_set_zero_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip_addr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_addr_set_zero_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("netmask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_addr_set_zero_ip4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("gw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("output "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif_null_output_ip4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" LWIP_IPV6_NUM_ADDRESSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip_addr_set_zero_ip6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip6_addr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip6_addr_state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP6_ADDR_INVALID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6_ADDRESS_LIFETIMES")]),t._v("\n    netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip6_addr_valid_life"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP6_ADDR_LIFE_STATIC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip6_addr_pref_life"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IP6_ADDR_LIFE_STATIC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6_ADDRESS_LIFETIMES */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("output_ip6 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif_null_output_ip6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NETIF_SET_CHECKSUM_CTRL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NETIF_CHECKSUM_ENABLE_ALL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mtu "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" netif_get_client_data")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("memset")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("client_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("client_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NUM_NETIF_CLIENT_DATA */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6_AUTOCONFIG")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 默认不会自动配置 IPv6 地址 */")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ip6_autoconfig_enabled "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6_AUTOCONFIG */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nd6_restart_netif")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_STATUS_CALLBACK")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("status_callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_STATUS_CALLBACK */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_NETIF_LINK_CALLBACK")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("link_callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_NETIF_LINK_CALLBACK */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IGMP")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("igmp_mac_filter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IGMP */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6 && LWIP_IPV6_MLD")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mld_mac_filter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 && LWIP_IPV6_MLD */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" ENABLE_LOOPBACK")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("loop_first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("loop_last "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ENABLE_LOOPBACK */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 记录网卡的信息 */")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif_num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("input "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NETIF_RESET_HINTS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("loop_cnt_current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置网卡的 IP 地址，子网掩码，默认网关 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("netif_set_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ipaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netmask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 调用用户自定义的网卡初始化函数 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" ERR_OK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Initialize the MTU for IPv6 to the one set by the netif driver.\n     This can be updated later by RA. */")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mtu6 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mtu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 为当前网卡确定唯一的 num */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" !LWIP_SINGLE_NETIF")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("netif2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num_netifs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      num_netifs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" netif2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" netif2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ASSERT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"netif already added"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netif2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num_netifs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_ASSERT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"too many netifs, max. supported number is 255"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_netifs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("254")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    netif_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    netif_num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u8_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 将当前网卡插入到全局的 netif_list 链表中，插入方式：头插 */")]),t._v("\n  netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  netif_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* "LWIP_SINGLE_NETIF */')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mib2_netif_added")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IGMP")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IGMP 开始工作 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" NETIF_FLAG_IGMP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("igmp_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IGMP */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_DEBUGF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"netif: added interface %c%c IP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_IPV4")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_DEBUGF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" addr "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip4_addr_debug_print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ipaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_DEBUGF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" netmask "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip4_addr_debug_print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netmask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_DEBUGF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" gw "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip4_addr_debug_print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_IPV4 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LWIP_DEBUGF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NETIF_DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("netif_invoke_ext_callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LWIP_NSC_NETIF_ADDED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br"),n("span",{staticClass:"line-number"},[t._v("98")]),n("br"),n("span",{staticClass:"line-number"},[t._v("99")]),n("br"),n("span",{staticClass:"line-number"},[t._v("100")]),n("br"),n("span",{staticClass:"line-number"},[t._v("101")]),n("br"),n("span",{staticClass:"line-number"},[t._v("102")]),n("br"),n("span",{staticClass:"line-number"},[t._v("103")]),n("br"),n("span",{staticClass:"line-number"},[t._v("104")]),n("br"),n("span",{staticClass:"line-number"},[t._v("105")]),n("br"),n("span",{staticClass:"line-number"},[t._v("106")]),n("br"),n("span",{staticClass:"line-number"},[t._v("107")]),n("br"),n("span",{staticClass:"line-number"},[t._v("108")]),n("br"),n("span",{staticClass:"line-number"},[t._v("109")]),n("br"),n("span",{staticClass:"line-number"},[t._v("110")]),n("br"),n("span",{staticClass:"line-number"},[t._v("111")]),n("br"),n("span",{staticClass:"line-number"},[t._v("112")]),n("br"),n("span",{staticClass:"line-number"},[t._v("113")]),n("br"),n("span",{staticClass:"line-number"},[t._v("114")]),n("br"),n("span",{staticClass:"line-number"},[t._v("115")]),n("br"),n("span",{staticClass:"line-number"},[t._v("116")]),n("br"),n("span",{staticClass:"line-number"},[t._v("117")]),n("br"),n("span",{staticClass:"line-number"},[t._v("118")]),n("br"),n("span",{staticClass:"line-number"},[t._v("119")]),n("br"),n("span",{staticClass:"line-number"},[t._v("120")]),n("br"),n("span",{staticClass:"line-number"},[t._v("121")]),n("br"),n("span",{staticClass:"line-number"},[t._v("122")]),n("br"),n("span",{staticClass:"line-number"},[t._v("123")]),n("br"),n("span",{staticClass:"line-number"},[t._v("124")]),n("br"),n("span",{staticClass:"line-number"},[t._v("125")]),n("br"),n("span",{staticClass:"line-number"},[t._v("126")]),n("br"),n("span",{staticClass:"line-number"},[t._v("127")]),n("br"),n("span",{staticClass:"line-number"},[t._v("128")]),n("br"),n("span",{staticClass:"line-number"},[t._v("129")]),n("br"),n("span",{staticClass:"line-number"},[t._v("130")]),n("br"),n("span",{staticClass:"line-number"},[t._v("131")]),n("br"),n("span",{staticClass:"line-number"},[t._v("132")]),n("br"),n("span",{staticClass:"line-number"},[t._v("133")]),n("br"),n("span",{staticClass:"line-number"},[t._v("134")]),n("br"),n("span",{staticClass:"line-number"},[t._v("135")]),n("br"),n("span",{staticClass:"line-number"},[t._v("136")]),n("br"),n("span",{staticClass:"line-number"},[t._v("137")]),n("br"),n("span",{staticClass:"line-number"},[t._v("138")]),n("br"),n("span",{staticClass:"line-number"},[t._v("139")]),n("br"),n("span",{staticClass:"line-number"},[t._v("140")]),n("br"),n("span",{staticClass:"line-number"},[t._v("141")]),n("br"),n("span",{staticClass:"line-number"},[t._v("142")]),n("br"),n("span",{staticClass:"line-number"},[t._v("143")]),n("br"),n("span",{staticClass:"line-number"},[t._v("144")]),n("br"),n("span",{staticClass:"line-number"},[t._v("145")]),n("br"),n("span",{staticClass:"line-number"},[t._v("146")]),n("br"),n("span",{staticClass:"line-number"},[t._v("147")]),n("br"),n("span",{staticClass:"line-number"},[t._v("148")]),n("br"),n("span",{staticClass:"line-number"},[t._v("149")]),n("br"),n("span",{staticClass:"line-number"},[t._v("150")]),n("br"),n("span",{staticClass:"line-number"},[t._v("151")]),n("br"),n("span",{staticClass:"line-number"},[t._v("152")]),n("br"),n("span",{staticClass:"line-number"},[t._v("153")]),n("br"),n("span",{staticClass:"line-number"},[t._v("154")]),n("br"),n("span",{staticClass:"line-number"},[t._v("155")]),n("br"),n("span",{staticClass:"line-number"},[t._v("156")]),n("br"),n("span",{staticClass:"line-number"},[t._v("157")]),n("br"),n("span",{staticClass:"line-number"},[t._v("158")]),n("br"),n("span",{staticClass:"line-number"},[t._v("159")]),n("br"),n("span",{staticClass:"line-number"},[t._v("160")]),n("br"),n("span",{staticClass:"line-number"},[t._v("161")]),n("br"),n("span",{staticClass:"line-number"},[t._v("162")]),n("br"),n("span",{staticClass:"line-number"},[t._v("163")]),n("br"),n("span",{staticClass:"line-number"},[t._v("164")]),n("br"),n("span",{staticClass:"line-number"},[t._v("165")]),n("br"),n("span",{staticClass:"line-number"},[t._v("166")]),n("br"),n("span",{staticClass:"line-number"},[t._v("167")]),n("br"),n("span",{staticClass:"line-number"},[t._v("168")]),n("br"),n("span",{staticClass:"line-number"},[t._v("169")]),n("br"),n("span",{staticClass:"line-number"},[t._v("170")]),n("br"),n("span",{staticClass:"line-number"},[t._v("171")]),n("br")])]),n("h3",{attrs:{id:"初始化-lwip-的一般流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化-lwip-的一般流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化 LwIP 的一般流程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(213),alt:"初始化 LwIP"}})]),t._v(" "),n("h2",{attrs:{id:"lwip-的内存管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip-的内存管理","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP 的内存管理")]),t._v(" "),n("p",[t._v("LwIP 的内存管理机制大致上可以分成三种：")]),t._v(" "),n("ol",[n("li",[t._v("C 标准库自带的内存分配策略（即使用 malloc、free等函数，这些函数的"),n("strong",[t._v("执行时间是不确定的")]),t._v("）")]),t._v(" "),n("li",[t._v("LwIP 的动态内存堆分配策略")]),t._v(" "),n("li",[t._v("LwIP 的动态内存池分配策略")])]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("LwIP 使用动态内存池的原因")]),t._v(" "),n("p",[t._v("LwIP 中有很多固定的数据结构空间，比如 TCP 首部，UDP 首部，IP 首部，Ethernet 首部等。采用内存池策略分配这些固定大小的内存空间，可以大大提升效率，还不会产生内存碎片。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/01/PwhSgK.png",alt:"LwIP内存管理"}})]),t._v(" "),n("ul",[n("li",[t._v("将MEM_LIBC_MALLOC设置为1，表明使用标准C库自带的内存分配策略")]),t._v(" "),n("li",[t._v("将MEMP_MEM_MALLOC设置为1，表明使用LwIP自己的动态内存堆分配策略")]),t._v(" "),n("li",[t._v("LwIP还支持内存池，不过在ESP-IDF中并没有被使能。相较于内存堆的动态分配，内存池效率更高，碎片少，但是会消耗更多的内存")])]),t._v(" "),n("h2",{attrs:{id:"网络数据包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络数据包","aria-hidden":"true"}},[t._v("#")]),t._v(" 网络数据包")]),t._v(" "),n("blockquote",[n("p",[t._v("LwIP的缓冲管理机制的功能是尽量避免内存拷贝，尽量较少对内存和空间的需求，提高程序的执行效率。LwIP使用数据结构pbuf来描述内存的缓冲数据包。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/01/Pw4Mz6.png",alt:"pbuf结构体"}})]),t._v(" "),n("ul",[n("li",[t._v("由于实际发送或接收的数据包长度不一，而每个pbuf只能管理一部分数据，因此对于大容量的数据包，就必须使用多个pbuf才能完整地描述它")]),t._v(" "),n("li",[t._v("type表明了该pbuf的类型，目前LwIP定义了四种类型的pbuf，分别是："),n("code",[t._v("PBUF_RAM")]),t._v("，"),n("code",[t._v("PBUF_ROM")]),t._v("，"),n("code",[t._v("PBUF_REF")]),t._v("，"),n("code",[t._v("PBUF_POOL")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/01/Pw4RWq.png",alt:"pbuf类型定义"}})]),t._v(" "),n("ul",[n("li",[t._v("PBUF_RAM类型的pbuf是通过内存堆分配得到的，LwIP协议栈和应用程序要传递的数据一般都使用该类型的pbuf。")]),t._v(" "),n("li",[t._v("PBUF_POOL类型的pbuf是通过内存池分配得到的，由于分配此类型的pbuf可以快速完成，适合中断处理，因此它更多地应用在网络设备驱动层。")]),t._v(" "),n("li",[t._v("PBUF_REF和PBUF_ROM类型的pbuf基本相同，他们都是从内存池中申请分配pbuf结构首部空间，而不申请数据区的空间。两者的区别在于，前者指向RAM空间内的某段数据，后者指向ROM空间内的某段数据。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P63kMq.png",alt:"pbuf结构"}})]),t._v(" "),n("h3",{attrs:{id:"pbuf管理api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pbuf管理api","aria-hidden":"true"}},[t._v("#")]),t._v(" pbuf管理API")]),t._v(" "),n("blockquote",[n("p",[t._v("当使用Netconn API时，则使用netbuf（网络缓冲）发送/接收数据，netbuf只是pbuf结构的封装，它可容纳分配的或引用的数据。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P61IaD.png",alt:"pbuf管理API"}})]),t._v(" "),n("h2",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("HTTP 协议在物联网系统中的劣势")]),t._v(" "),n("ol",[n("li",[t._v("HTTP 是一种同步协议，客户端需要等待服务器的响应才可以进行下一步工作（在客户端数量多、网络不可靠的场景下，实现同步通信很困难）")]),t._v(" "),n("li",[t._v("HTTP 是单向的，客户端只能主动向服务器发出数据，无法被动接收来自网络的数据（不适用于实时控制的场合）")]),t._v(" "),n("li",[t._v("HTTP 有许多帧头和规则，是一种重量级的协议（实现在物联网设备中需要耗费大量的系统资源）")])])]),t._v(" "),n("h2",{attrs:{id:"lwip架构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip架构","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP架构")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/09/PyrZkR.png",alt:"LwIP架构"}})]),t._v(" "),n("h2",{attrs:{id:"进程模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 进程模型")]),t._v(" "),n("blockquote",[n("p",[t._v("进程模型是指TCP/IP协议栈的各协议入IP协议、TCP协议、ICMP协议等是如何实现的。")])]),t._v(" "),n("ul",[n("li",[t._v("TCP/IP协议栈的每个协议都通过一个不同的进程实现。在该模型下，每个进程都严格地与一个协议相对应。这种进程模型的优点是网络协议的每一层都很清晰，每一层都可以随时参与系统运行。该模型的缺点是进程间的上下文切换比较频繁，系统将为频繁的上下文切换付出较大的代价。")]),t._v(" "),n("li",[t._v("TCP/IP协议栈驻留在操作系统的内核中，应用程序通过系统调用与TCP/IP协议栈通信。该模型下，各协议栈并非严格地与一个进程相对应。")]),t._v(" "),n("li",[t._v("TCP/IP协议栈驻留在同一个进程中，独立于操作系统内核空间。LwIP采用正是这种方式，LwIP作为一个独立的进程，运行在用户空间内，其优点是可以方便地移植到不同的操作系统中运行。")])]),t._v(" "),n("h2",{attrs:{id:"arp处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arp处理","aria-hidden":"true"}},[t._v("#")]),t._v(" ARP处理")]),t._v(" "),n("blockquote",[n("p",[t._v("ARP协议是TCP/IP协议的基础，本质是实现IP地址与底层物理地址的相互转换。ARP协议的核心是ARP缓存表，而ARP协议的实质就是对缓存表的建立、更新、查询等操作。ARP缓存表是由若干缓存表项组成，在LwIP中，描述缓存表项的数据结构叫etharp_entry。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0CQUA.png",alt:"ARP协议数据包格式"}})]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("etharp_entry")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" ARP_QUEUEING")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Pointer to queue of pending outgoing packets on this ARP entry. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("etharp_q_entry")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ARP_QUEUEING */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Pointer to a single pending outgoing packet on this ARP entry. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pbuf")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ARP_QUEUEING */")]),t._v("\n  ip4_addr_t ipaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("netif"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("eth_addr")]),t._v(" ethaddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  u16_t ctime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  u8_t state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("ul",[n("li",[t._v("ipaddr存放IP地址，ethaddr存放物理地址，state表示缓存项的状态（例如是否为空，是否稳定），ctime记录ARP缓存项处于某个状态的时间，当某表项的ctime值大于规定的表项最大生存值时，LwIP内核会删除该表项。因此使用ARP功能时，必须设置一个ARP超时事件，该超时事件的基本功能就是对每个表项的ctime字段值加1，然后删除那些生存时间大于最大生存值的表项")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0PcWt.jpg",alt:"ARP处理流程"}})]),t._v(" "),n("ul",[n("li",[t._v("函数ethernet_input根据报文首部的帧类型字段判断接收到的报文类型，如果是IP包，则将该包传递给etharp_ip_input，如果是ARP包，则将该包递交给etharp_arp_input")]),t._v(" "),n("li",[t._v("函数etharp_ip_input调用函数update_arp_entry，它是将报文首部的MAC地址和IP地址更新到ARP缓存中")]),t._v(" "),n("li",[t._v("函数etharp_arp_input首先判断接收到的ARP数据包的类型，如果是ARP请求包，那么首先判断这个包是否是给自己的，如果是给自己的，就在原有包的基础上重组一个ARP应答包发送出去；如果不是给自己的，则直接忽略而如果接收到的数据包是ARP应答包，那么就调用update_arp_entry更新ARP缓存表")])]),t._v(" "),n("h2",{attrs:{id:"ip处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ip处理","aria-hidden":"true"}},[t._v("#")]),t._v(" IP处理")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0CUbQ.png",alt:"IP协议数据包格式"}})]),t._v(" "),n("h4",{attrs:{id:"lwip软件大致框架"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip软件大致框架","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP软件大致框架")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0keJA.jpg",alt:"LwIP整体框架图"}})]),t._v(" "),n("ul",[n("li",[t._v("ip_input会做各项检查，包括协议版本号，IP首部的校验值，源IP地址是否有效等，然后检测IP数据包中的目的IP地址是否与本节点的IP地址相符，如果是本节点的IP地址，则根据该IP数据包首部的协议字段判断该数据包应该被递交到哪个上层协议，并调用相应的函数。如果是UDP协议，则调用udp_input函数；如果是TCP协议，则调用tcp_input函数；如果是ICMP协议，则调用icmp_input函数；如果是IGMP协议，则调用igmp_input函数；如果都不是，则调用函数icmp_dest_unreach返回一个协议不可达ICMP数据包给源主机。如果不是本节点的IP地址，则通过调用函数ip_forward对数据包进行转发。需要注意，由于一个节点可能含有多个IP地址，因此ip_input函数会遍历网络接口链表netif_list上的netif结构变量，来查找与IP数据包中相匹配的IP地址。")]),t._v(" "),n("li",[t._v("ip_output使用ip_route函数查找目标网络接口netif来发送IP数据包。当网络接口netif确定后，IP数据包通过函数ip_output_if发送出去。若ip_route没有找到合适的网络接口，则丢弃该报文，终止本次发送。函数ip_route通过遍历网络接口链表netif_list，查找与目的IIP地址在同一个子网中的网络接口，并将该网络接口返回给变量netif。")])]),t._v(" "),n("h2",{attrs:{id:"icmp处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#icmp处理","aria-hidden":"true"}},[t._v("#")]),t._v(" ICMP处理")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0AVmT.jpg",alt:"ICMP协议数据包格式"}})]),t._v(" "),n("ul",[n("li",[t._v("icmp_input在ip_input中被调用，它处理接收到的ICMP数据包，并根据包类型做相应的处理。在LwIP协议栈中，它只处理ICMP回显请求包，对其他类型的ICMP包不作响应。icmp_input在处理ICMP回显请求时，首先判断该数据包是否为广播或者组播包，如果是，则直接返回，不再继续处理；如果不是，则继续判断该数据包长度是否小于ICMP回显请求头部长度，如果是则丢弃数据包；如果不是则将该ICMP报文类型字段变为0，重新计算校验和，并将IP报文首部的源IP地址和目的IP地址交换位置，并通过调用函数ip_output_if将数据包发送出去。")]),t._v(" "),n("li",[t._v("函数icmp_dest_unreach在ip_input、udp_input中被调用，它的功能是通过调用函数icmp_send_response发送一个“目的不可到达”类型的icmp报文。在函数ip_input中，当所接收的IP报文协议字段不可识别时，icmp_dest_unreach就被调用。而在UDP处理器中，若不能找到与接收的报文相对应的端口号，则icmp_dest_unreach也将被调用。")]),t._v(" "),n("li",[t._v("函数icmp_time_exceeded在ip_forward中被调用，它的功能是通过调用函数icmp_send_response发送一个“超时”类型的ICMP报文。在函数ip_forward中，当TTL减小为0时，调用该函数。")])]),t._v(" "),n("h2",{attrs:{id:"udp处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udp处理","aria-hidden":"true"}},[t._v("#")]),t._v(" UDP处理")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0JfdH.png",alt:"UDP协议数据包"}})]),t._v(" "),n("ul",[n("li",[t._v("函数udp_input将检查报文的UDP校验，最终调用函数recv，将收到的报文传递给应用层程序")]),t._v(" "),n("li",[t._v("当应用层程序要通过UDP协议向外发送IP报文时，将通过调用函数udp_send实现，函数udp_send通过调用IP层的函数ip_output_if实现报文的发送")]),t._v(" "),n("li",[t._v("LwIP使用链表结构体udp_pcb来保存每一个UDP会话的状态")])]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("udp_pcb")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Common members of all PCB types */")]),t._v("\n  IP_PCB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Protocol specific PCB members */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("udp_pcb")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  u8_t flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ports are in host byte order */")]),t._v("\n  u16_t local_port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remote_port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_MULTICAST_TX_OPTIONS")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** outgoing network interface for multicast packets */")]),t._v("\n  ip_addr_t multicast_ip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** TTL for outgoing multicast packets */")]),t._v("\n  u8_t mcast_ttl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_MULTICAST_TX_OPTIONS */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_UDPLITE")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** used for UDP_LITE only */")]),t._v("\n  u16_t chksum_len_rx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chksum_len_tx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_UDPLITE */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** receive callback function */")]),t._v("\n  udp_recv_fn recv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** user-supplied argument for the recv callback */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("recv_arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br")])]),n("h2",{attrs:{id:"tcp处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp处理","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP处理")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/02/P0JULF.png",alt:"TCP协议数据包"}})]),t._v(" "),n("ul",[n("li",[t._v("TCP的滑动窗口协议是用于实现流量控制的")]),t._v(" "),n("li",[t._v("TCP的超时和重传机制提高了数据传输的可靠性")]),t._v(" "),n("li",[t._v("拥塞控制是通过慢启动算法和拥塞避免算法来实现的")]),t._v(" "),n("li",[t._v("LwIP中含有两个定时器函数：tcp_fasttmr和tcp_slowtmr，tcp_fasttmr每250ms调用一次，tcp_slowtmr每500ms调用一次。快速定时器主要做两个方面的事情：向上层递交上层一直未接收的数据，二是发送该连接上的延迟ACK请求数据段。慢速定时器参与了较多功能，如超时与重传、拥塞控制等。")])]),t._v(" "),n("h2",{attrs:{id:"lwip-的三种编程接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip-的三种编程接口","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP 的三种编程接口")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("RAW/Callback API")]),t._v(" "),n("p",[t._v("直接调用协议栈各模块的函数（它们是使用"),n("strong",[t._v("回调函数")]),t._v("的 API 接口，也称为 RAW API）。")]),t._v(" "),n("p",[t._v("优点：")]),t._v(" "),n("ul",[n("li",[t._v("无需操作系统支持。")]),t._v(" "),n("li",[t._v("LwIP 内核把数据交给应用程序的过程只是一次简单的 API 调用，非常节省时间和空间。")]),t._v(" "),n("li",[t._v("应用程序和内核程序处于同一线程之中，节省了任务间通信和任务切换的开销。")])]),t._v(" "),n("p",[t._v("缺点：")]),t._v(" "),n("ul",[n("li",[t._v("应用程序的执行会制约内核程序的执行，不同的应用程序之间也会互相制约。在应用程序执行的过程中，内核程序将不能得到运行，这会影响网络数据包的处理效率，严重地还会造成数据包堵塞而发生丢包现象。")])])]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("Netconn API")]),t._v(" "),n("p",[t._v("使用 LwIP 提供的专用 API，也称为 Sequential API，程序的执行过程基于 "),n("strong",[t._v("open-read-write-close")]),t._v(" 模型。Netconn API 是基于操作系统的 IPC 机制实现的，它将 LwIP 内核代码和网络应用程序分离成独立的线程。")]),t._v(" "),n("p",[t._v("优点：")]),t._v(" "),n("ul",[n("li",[t._v("LwIP 线程只负责数据包的 TCP/IP 封装和拆封，不用进行数据的应用层处理，提高了系统对网络数据包的处理效率。")]),t._v(" "),n("li",[t._v("相较于 Socket API，Netconn API 避免了内核程序和网络应用程序之间的数据拷贝，提高了数据传递的效率。")])]),t._v(" "),n("p",[t._v("缺点：")]),t._v(" "),n("ul",[n("li",[t._v("依赖操作系统。")]),t._v(" "),n("li",[t._v("内核程序和网络应用程序之间的数据包传递需要依靠操作系统的信号量和邮箱机制完成，耗费了更多的时间和内存。")])])]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("BSD Socket API")]),t._v(" "),n("p",[t._v("Socket 对网络连接进行了高级的抽象，使得用户可以像操作文件一样操作网络连接。LwIP 的 Socket API 是基于 Netconn API 实现的。")]),t._v(" "),n("p",[t._v("优点：")]),t._v(" "),n("ul",[n("li",[t._v("使用 Socket 编写的网络应用程序具有很好的可移植性。")])]),t._v(" "),n("p",[t._v("缺点：")]),t._v(" "),n("ul",[n("li",[t._v("Socket API 在内核程序和应用程序之间存在数据拷贝，降低了数据传递的效率。")])])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",[t._v("LwIP 并没有实现全部的 BSD Socket API。")])]),t._v(" "),n("h3",{attrs:{id:"tcp-raw-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp-raw-api","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP RAW API")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P6l7j0.png",alt:"TCP RAW API"}})]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("struct tcp_pcb* tcp_new()")]),t._v(" "),n("td",[t._v("新建tcp协议控制块")])]),t._v(" "),n("tr",[n("td",[t._v("ert_t tcp_bind(struct tcp_pcb* pcb,struct ip_addr* ipaddr,u16_t port)")]),t._v(" "),n("td",[t._v("绑定本地IP地址和端口号，如果ipaddr为IP_ADDR_ANY，则将连接绑定到所有的本地IP地址上")])]),t._v(" "),n("tr",[n("td",[t._v("struct tcp_pcb* tcp_listen(struct tcp_pcb* pcb)")]),t._v(" "),n("td",[t._v("使指定的连接开始进入监听状态，如果监听成功，就返回一个新的连接控制块pcb")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_accepted(struct tcp_pcb* pcb)")]),t._v(" "),n("td",[t._v("通知LwIP一个新来的连接已经被接收，这个函数通常在由tcp_accept指定的回调函数中被调用")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_accept(struct tcp_pcb* pcb,err_t (*accept)(void* arg,struct tcp_pcb* newpcb,err_t err))")]),t._v(" "),n("td",[t._v("指定处于监听状态的连接，在成功建立连接后要调用的回调方法")])]),t._v(" "),n("tr",[n("td",[t._v("err_t tcp_connect(struct tcp_pcb* pcb,struct ip_addr* ipaddr,u16_t port,err_t (* connected)(void* arg,struct tcp_pcb* tpcb,err_t err))")]),t._v(" "),n("td",[t._v("请求连接到执行的远程主机")])]),t._v(" "),n("tr",[n("td",[t._v("err_t tcp_write(struct tcp_pcb* pcb,void* dataptr,u16_t len,u8_t copy)")]),t._v(" "),n("td",[t._v("发送TCP数据，将要发送的数据放入发送队列中，由协议栈内核发送，copy为0则不会为发送的数据分配新的内存空间")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_sent(struct tcp_pcb* pcb,err_t (*sent)(void* arg,struct tcp_pcb* tpcb,u16_t len))")]),t._v(" "),n("td",[t._v("指定当远程主机成功接收数据后，应用程序调用的回调函数")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_recv(struct tcp_pcb* pcb,err_t (* recv)(void* arg,struct tcp_pcb* tpcb,struct pbuf* p,err_t err))")]),t._v(" "),n("td",[t._v("指定接收数据时调用的回调函数")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_recved(struct tcp_pcb* pcb,u16_t len)")]),t._v(" "),n("td",[t._v("用于获取接收到的数据的长度，必须在tcp_recv指定的回调函数中被调用")])]),t._v(" "),n("tr",[n("td",[t._v("err_t tcp_close(struct tcp_pcb* pcb)")]),t._v(" "),n("td",[t._v("关闭一个指定的TCP连接，调用该函数后将会释放pcb控制块所占用的内存空间")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_abort(struct tcp_pcb* pcb)")]),t._v(" "),n("td",[t._v("终止一个指定的连接，调用该函数后，pcb控制块所占用的内存空间将被释放")])]),t._v(" "),n("tr",[n("td",[t._v("void tcp_err(struct tcp_pcb* pcb,void (*err)(void* arg,err_t err))")]),t._v(" "),n("td",[t._v("指定处理错误的回调函数")])])])]),t._v(" "),n("h3",{attrs:{id:"tcp-raw-api-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp-raw-api-2","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP RAW API")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P6lLHU.png",alt:"UDP RAW API"}})]),t._v(" "),n("h3",{attrs:{id:"netconn-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#netconn-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Netconn API")]),t._v(" "),n("ul",[n("li",[t._v("数据结构netconn描述了应用程序要使用API函数机那里一个连接的各种属性，包括了连接的类型、最近的故障代码、回调函数等。")])]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** A netconn descriptor */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netconn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** type of the netconn (TCP, UDP or RAW) */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netconn_type")]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** current state of the netconn */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("netconn_state")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** the lwIP internal protocol control block */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ip_pcb")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("tcp_pcb")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tcp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("udp_pcb")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("udp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("raw_pcb")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("raw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" pcb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** the last error this netconn had */")]),t._v("\n  err_t last_err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" !LWIP_NETCONN_SEM_PER_THREAD")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** sem that is used to synchronously execute functions in the core context */")]),t._v("\n  sys_sem_t op_completed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** mbox where received packets are stored until they are fetched\n      by the netconn application thread (can grow quite big) */")]),t._v("\n  sys_mbox_t recvmbox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_TCP")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** mbox where new connections are stored until processed\n      by the application thread */")]),t._v("\n  sys_mbox_t acceptmbox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_TCP */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** only used for socket layer */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SOCKET")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" socket"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_SOCKET */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SO_SNDTIMEO")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** timeout to wait for sending data (which means enqueueing data for sending\n      in internal buffers) in milliseconds */")]),t._v("\n  s32_t send_timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_SO_RCVTIMEO */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SO_RCVTIMEO")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** timeout in milliseconds to wait for new data to be received\n      (or connections to arrive for listening netconns) */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" recv_timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_SO_RCVTIMEO */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SO_RCVBUF")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** maximum amount of bytes queued in recvmbox\n      not used for TCP: adjust TCP_WND instead! */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" recv_bufsize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** number of bytes currently in recvmbox to be received,\n      tested against recv_bufsize to limit bytes on recvmbox\n      for UDP and RAW, used for FIONREAD */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" recv_avail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_SO_RCVBUF */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_SO_LINGER")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** values <0 mean linger is disabled, values > 0 are seconds to linger */")]),t._v("\n  s16_t linger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_SO_LINGER */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** flags holding more netconn-internal state, see NETCONN_FLAG_* defines */")]),t._v("\n  u8_t flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" LWIP_TCP")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** TCP: when data passed to netconn_write doesn't fit into the send buffer,\n      this temporarily stores how much is already sent. */")]),t._v("\n  size_t write_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** TCP: when data passed to netconn_write doesn't fit into the send buffer,\n      this temporarily stores the message.\n      Also used during connect and close. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("api_msg_msg")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("current_msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* LWIP_TCP */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** A callback function that is informed about events for this netconn */")]),t._v("\n  netconn_callback callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br")])]),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P61AED.png",alt:"Netconn API"}})]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("struct netconn* netconn_new_with_proto_and_callback(enum netconn_type t,u8_t proto,netconn_callback callback)")]),t._v(" "),n("td",[t._v("建立一个新的netconn连接")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_delete(struct netconn* conn)")]),t._v(" "),n("td",[t._v("删除netconn所指向的连接")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_getaddr(struct netconn* conn,struct ip_addr* addr,u16_t* port,u8_t local)")]),t._v(" "),n("td",[t._v("获取conn连接的主机IP地址和端口号")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_bind(struct netconn* conn,struct ip_addr* addr,u16_t port)")]),t._v(" "),n("td",[t._v("将一个IP地址及端口号与conn指向的而连接绑定")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_connect(struct netconn* conn,struct ip_addr* addr,u16_t port)")]),t._v(" "),n("td",[t._v("将服务器端的IP地址和端口号与conn指向的连接绑定")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_disconnect(struct netconn* conn)")]),t._v(" "),n("td",[t._v("断开conn指向的连接")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_listen_with_backlog(struct netconn* conn，u8_t backlog)")]),t._v(" "),n("td",[t._v("将conn指向的连接设定为监听状态")])]),t._v(" "),n("tr",[n("td",[t._v("struct netconn* netconn_accept(struct netconn* conn)")]),t._v(" "),n("td",[t._v("接收客户端的连接，该函数会阻塞在acceptmbox邮箱上")])]),t._v(" "),n("tr",[n("td",[t._v("struct netbuf* netconn_recv(struct netconn* conn)")]),t._v(" "),n("td",[t._v("接收数据，接收到的数据被封装为netbuf结构")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_sendto(struct netconn* conn,struct netbuf* buf,struct ip_addr* addr,u16_t port)")]),t._v(" "),n("td",[t._v("向一个指定的IP地址和端口号发送数据，这个函数只能用在conn类型为UDP或者RAW的连接中")])]),t._v(" "),n("tr",[n("td",[t._v("err_t netconn_write(struct netconn* conn,const void* dataptr,size_t size,u8_t apiflag)")]),t._v(" "),n("td",[t._v("向相应的TCP连接上发送数据，这个函数只能用于发送TCP的报文")])]),t._v(" "),n("tr",[n("td",[t._v("err_t nnetconn_close(struct netconn* conn)")]),t._v(" "),n("td",[t._v("关闭conn指向的连接")])])])]),t._v(" "),n("ul",[n("li",[t._v("netconn_new_with_proto_and_callback首先调用netconn_alloc函数分配并初始化一个netconn结构，接下来该函数会构建一个api_msg消息，该消息要求内核执行函数do_newconn，最后调用函数tcpip_apimsg来将消息包装成tcpip_msg结构并发送出去。tcpip_thread函数解析该消息并调用函数do_newconn，do_newconn根据参数的类型调用函数tcp_new创建一个TCP控制块")]),t._v(" "),n("li",[t._v("tcpip_thread是处理TCP/IP的内核协议栈进程，它只接收tcpip_msg结构封装的消息，并根据消息的类型来判定该消息来自物理网卡或应用层程序。如果接收到网卡的IP报文，则将该报文递交给ip_input函数；如果是应用层程序发送的消息，则通过调用消息指定的内核处理函数来完成相应的功能")])]),t._v(" "),n("h3",{attrs:{id:"socket-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#socket-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Socket API")]),t._v(" "),n("blockquote",[n("p",[t._v("LwIP提供了标准BSD套接字API，它也是有序API，在内存构建于Netconn API之上。所谓“有序”是指其执行模型基于典型的阻塞式打开-读-写-关闭机制。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P61V4H.png",alt:"Socket API"}})]),t._v(" "),n("h2",{attrs:{id:"lwip移植"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip移植","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP移植")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("以太网接口任务用于接收来自物理网卡的数据报文，同时将收到的报文通过FreeRTOS提供的邮箱传递给TCP/IP协议栈任务。以太网接口任务平时处于挂起状态，当硬件收到报文时，将产生接收报文中断，该终端以信号量的方式将以太网接口任务激活")]),t._v(" "),n("li",[t._v("应用程序使用TCP/IP协议栈提供的Sequential API接口访问LwIP，同时这两个独立的任务需要使用FreeRTOS提供的邮箱机制实现彼此之间信息的交互。Sequential API接口函数在FreeRTOS操作系统运行环境下是“阻塞”函数，也就是说应用程序任务在调用Sequential API接口函数时，将会被阻塞，直到收到来自TCP/IP协议栈返回的消息应答")]),t._v(" "),n("li",[t._v("基于LwIP的TCP/IP协议栈与应用程序运行在两个独立的任务中")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/09/PyyVRx.jpg",alt:"网卡驱动移植"}})]),t._v(" "),n("ol",[n("li",[t._v("以太网接口文件ethernetif.c的移植，主要包含"),n("code",[t._v("ethernet_low_level_init")]),t._v("，"),n("code",[t._v("ethernet_low_level_output")]),t._v("，"),n("code",[t._v("ethernetif_input")]),t._v("，"),n("code",[t._v("ethernetif_init")]),t._v("这几个函数的功能\n"),n("ul",[n("li",[n("code",[t._v("ethernetif_input")]),t._v("函数用于从底层物理网卡读取报文，并将该报文向上传递给LwIP协议栈函数ethernet_input进行处理")]),t._v(" "),n("li",[n("code",[t._v("ethernetif_init")]),t._v("函数指定了网络接口netif对应的主机名及网卡描述，并指定了该网卡的MAC地址，同事还指定了netif的发送数据报文函数")])])]),t._v(" "),n("li",[t._v("操作系统模拟层文件sys_arch.c的移植，总的来时操作系统模拟层主要完成了与信号量、消息邮箱机制、线程相关的功能\n"),n("ul",[n("li",[t._v("在sys_arch.h文件中对信号量、邮箱、线程对象进行重定义")]),t._v(" "),n("li",[t._v("sys_mbox_new函数，使用FreeRTOS提供的消息队列机制创建一个空的消息队列")]),t._v(" "),n("li",[t._v("sys_mbox_free函数，删除一个队列，当该队列中还有未被取出的消息时，该函数应当报错，并通知应用程序")]),t._v(" "),n("li",[t._v("sys_mbox_post函数，将消息发送到消息队列中，该函数是一个阻塞函数，当消息被发送至队列后，该函数才会退出阻塞状态")]),t._v(" "),n("li",[t._v("sys_mbox_trypost函数，用于尝试将某个消息发送至消息队列中，当消息被成功投递后，则返回成功，否则返回失败")]),t._v(" "),n("li",[t._v("sys_arch_mbox_fetch函数，用于从消息队列中取出一条消息，该函数是一个阻塞函数，调用该函数的线程若未取到消息，则在形参timeout所指定的时间内，该线程被阻塞。当超过timeout所指定的时间后，该线程恢复至就绪状态。若timeout为0，则调用该函数的线程一直被阻塞，直到收到消息")]),t._v(" "),n("li",[t._v("sys_arch_mbox_tryfetch函数尝试从消息队列中取出消息，它是一个非阻塞函数，当取到消息时，则返回成功，否则立即退出，返回队列空")]),t._v(" "),n("li",[t._v("sys_sem_new函数创建一个信号量，并根据形参的值指定好当前信号量的状态")]),t._v(" "),n("li",[t._v("sys_arch_sem_wait函数在形参timeout指定的时间被阻塞，若timeout为0，则调用该函数的线程将一直被阻塞，直到等待的信号量被释放。但该函数取到信号量时，它将返回取到的该信号量所占的时间")]),t._v(" "),n("li",[t._v("sys_sem_signal函数用于释放一个信号量")]),t._v(" "),n("li",[t._v("sys_sem_free函数用于删除一个信号量")]),t._v(" "),n("li",[t._v("sys_thread_new函数用于创建一个新的线程")]),t._v(" "),n("li",[t._v("sys_init函数是操作系统模拟层的初始化函数，主要对定时器管理数组进行了初始化")]),t._v(" "),n("li",[t._v("sys_zrch_timeouts函数用于返回当前任务的定时器管理链表首地址")]),t._v(" "),n("li",[t._v("sys_arch_protect函数和sys_arch_unprotect函数在访问临界区资源时成对使用")])])]),t._v(" "),n("li",[t._v("ethernet_input函数的实现在独立模式和RTOS模式时是不同的：\n"),n("ul",[n("li",[t._v("在独立应用中，此函数必须被插入到应用的主循环中，以便轮询任何收到的包")]),t._v(" "),n("li",[t._v("在RTOS应用中，此函数为一个阻塞线程，只有当得到所等待的信号量时才处理接收到的数据包。当以太网外设收到数据并产生中断时，会在中断处理函数中释放此信号量")])])])]),t._v(" "),n("h2",{attrs:{id:"lwip配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lwip配置","aria-hidden":"true"}},[t._v("#")]),t._v(" LwIP配置")]),t._v(" "),n("blockquote",[n("p",[t._v("LwIP提供了名为lwipopts.h的文件，它允许用户充分配置栈及其所有模块。用户不需要定义所有LwIP选项：如果未定义某选项，则使用opt.h文件中定义的默认值")])]),t._v(" "),n("ul",[n("li",[t._v("内存配置")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2018/08/10/P6GG5D.png",alt:"LwIP内存配置"}})])])},[],!1,null,null,null);s.default=e.exports}}]);