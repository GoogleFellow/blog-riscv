(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{526:function(t,s,a){t.exports=a.p+"assets/img/regular_expression_functioning.54a18454.png"},527:function(t,s,a){t.exports=a.p+"assets/img/regex_meta_char.115b1f6c.png"},528:function(t,s,a){t.exports=a.p+"assets/img/regex_modes.ee5d9a37.png"},529:function(t,s,a){t.exports=a.p+"assets/img/regex_greedy_example_result.b0c582cb.png"},530:function(t,s,a){t.exports=a.p+"assets/img/regex_greedy_example.63e5c750.jpg"},531:function(t,s,a){t.exports=a.p+"assets/img/regex_lazy_example_result.10e40baa.png"},532:function(t,s,a){t.exports=a.p+"assets/img/regex_greedy_lazy_compare.40c03d7a.png"},533:function(t,s,a){t.exports=a.p+"assets/img/regex_group.43e12b6a.png"},534:function(t,s,a){t.exports=a.p+"assets/img/regex_subgroup.4b14f91e.png"},535:function(t,s,a){t.exports=a.p+"assets/img/regex_subgroup_index.083b6a8a.png"},536:function(t,s,a){t.exports=a.p+"assets/img/regex_search_double_word.3951b939.png"},665:function(t,s,a){"use strict";a.r(s);var r=a(29),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),r("p",[r("img",{attrs:{src:a(526),alt:"正则表达式的功能"}})]),t._v(" "),r("h2",{attrs:{id:"元字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),r("p",[r("img",{attrs:{src:a(527),alt:"元字符"}})]),t._v(" "),r("h2",{attrs:{id:"量词与贪婪"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#量词与贪婪"}},[t._v("#")]),t._v(" 量词与贪婪")]),t._v(" "),r("p",[r("img",{attrs:{src:a(528),alt:"各种匹配模式"}})]),t._v(" "),r("h3",{attrs:{id:"贪婪模式-greedy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式-greedy"}},[t._v("#")]),t._v(" 贪婪模式（Greedy）")]),t._v(" "),r("p",[t._v("正则中，表示次数的量词默认是贪婪的，在贪婪模式下，会尝试尽可能最大长度去匹配。")]),t._v(" "),r("p",[t._v("在字符串"),r("code",[t._v("aaabb")]),t._v("中使用正则"),r("code",[t._v("a*")]),t._v("的匹配过程：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(529),alt:"贪婪模式示例"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(530),alt:"贪婪模式解析"}})]),t._v(" "),r("h3",{attrs:{id:"非贪婪模式-lazy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#非贪婪模式-lazy"}},[t._v("#")]),t._v(" 非贪婪模式（Lazy）")]),t._v(" "),r("p",[t._v("非贪婪模式下，正则会找出长度最小且满足要求的结果。将贪婪模式变成非贪婪模式的方法是："),r("strong",[t._v("在量词后面加上"),r("code",[t._v("?")])])]),t._v(" "),r("p",[r("img",{attrs:{src:a(531),alt:"非贪婪模式示例"}})]),t._v(" "),r("h3",{attrs:{id:"贪婪和非贪婪的对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#贪婪和非贪婪的对比"}},[t._v("#")]),t._v(" 贪婪和非贪婪的对比")]),t._v(" "),r("p",[r("img",{attrs:{src:a(532),alt:"贪婪模式与非贪婪模式的对比"}})]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'a*'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaabb'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 贪婪模式")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'a*?'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaabb'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非贪婪模式")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br")])]),r("h2",{attrs:{id:"分组与引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分组与引用"}},[t._v("#")]),t._v(" 分组与引用")]),t._v(" "),r("p",[r("img",{attrs:{src:a(533),alt:"正则分组"}})]),t._v(" "),r("p",[t._v("括号在正则中可以用于分组，被括号括起来的部分“子表达式”会被保存成一个子组，简单来说，第几个括号就是第几个分组。")]),t._v(" "),r("p",[t._v("如果正则中出现了括号，那么就会认为，这个子表达式在后续可能会再次被引用，如果我们不打算去引用，建议将其声明为"),r("strong",[t._v("不保存")]),t._v("子组，以提高正则的性能。实现方法是，在括号里面使用"),r("code",[t._v("?:")]),t._v("进行声明。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th"),t._v(" "),r("th",[t._v("正则")]),t._v(" "),r("th",[t._v("示例")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("保存子组")]),t._v(" "),r("td",[t._v("(正则)")]),t._v(" "),r("td",[t._v("\\d{15}(\\d{3})?")])]),t._v(" "),r("tr",[r("td",[t._v("不保存子组")]),t._v(" "),r("td",[t._v("(?:正则)")]),t._v(" "),r("td",[t._v("\\d{15}(?:\\d{3})?")])])])]),t._v(" "),r("p",[r("img",{attrs:{src:a(534),alt:"分组"}})]),t._v(" "),r("h3",{attrs:{id:"分组的编号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分组的编号"}},[t._v("#")]),t._v(" 分组的编号")]),t._v(" "),r("p",[t._v("如果要看某个括号里面的内容是第一个分组，该怎么办？我们只需要数左括号（开括号）是第几个，就可以确定是第几个子组。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(535),alt:"分组编号"}})]),t._v(" "),r("h3",{attrs:{id:"命名分组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命名分组"}},[t._v("#")]),t._v(" 命名分组")]),t._v(" "),r("p",[t._v("有些语言提供了命名分组，这比数字更有辨识度，不容易出错。格式为："),r("code",[t._v("(?P<group-name>regular-expression)")])]),t._v(" "),r("h3",{attrs:{id:"分组引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分组引用"}},[t._v("#")]),t._v(" 分组引用")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("编程语言")]),t._v(" "),r("th",[t._v("查找时引用方式")]),t._v(" "),r("th",[t._v("替换时引用方式")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("Python")]),t._v(" "),r("td",[t._v("\\number")]),t._v(" "),r("td",[t._v("\\number")])]),t._v(" "),r("tr",[r("td",[t._v("Java")]),t._v(" "),r("td",[t._v("\\number")]),t._v(" "),r("td",[t._v("$number")])]),t._v(" "),r("tr",[r("td",[t._v("JavaScript")]),t._v(" "),r("td",[t._v("\\number")]),t._v(" "),r("td",[t._v("$number")])])])]),t._v(" "),r("p",[r("img",{attrs:{src:a(536),alt:"正则表达式查找重复单词"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);